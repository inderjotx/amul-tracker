# Use the official Node.js 22 image as base
FROM public.ecr.aws/lambda/nodejs:22 AS base

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Install pnpm
RUN npm install -g pnpm
# Copy package files
COPY package.json pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile
# Build stage
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Set environment variable to skip validation during build
ENV SKIP_ENV_VALIDATION=true

# Install pnpm
RUN npm install -g pnpm

# Build AWS Lambda JavaScript files
RUN pnpm build:aws

# Production image for cron job
FROM base AS runner

ENV NODE_ENV=production
WORKDIR ${LAMBDA_TASK_ROOT}

RUN echo ${LAMBDA_TASK_ROOT}

# Copy only the necessary files for the cron job
COPY --from=builder /app/node_modules ${LAMBDA_TASK_ROOT}/node_modules
COPY --from=builder /app/dist ${LAMBDA_TASK_ROOT}/dist
COPY --from=builder /app/package.json ${LAMBDA_TASK_ROOT}/package.json
COPY --from=builder /app/drizzle ${LAMBDA_TASK_ROOT}/drizzle
COPY --from=builder /app/drizzle.config.ts ${LAMBDA_TASK_ROOT}/drizzle.config.ts
COPY --from=builder /app/tsconfig.aws.json ${LAMBDA_TASK_ROOT}/tsconfig.aws.json

RUN sed -i '/"type": "module",/d' ${LAMBDA_TASK_ROOT}/package.json
RUN cat ${LAMBDA_TASK_ROOT}/package.json

CMD ["dist/services/handler.handler"]