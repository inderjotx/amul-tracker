# Use the official Node.js 22 image as base
FROM node:22-alpine AS base

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install pnpm
RUN npm install -g pnpm

# Copy package files for worker
COPY worker/package.json worker/pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile

# Build stage
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY worker/ ./

# Install pnpm
RUN npm install -g pnpm

# Production image for worker
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 workeruser

# Copy worker files
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/worker.ts ./
COPY --from=builder /app/send-email.ts ./
COPY --from=builder /app/email-template-engine.ts ./
COPY --from=builder /app/email-template ./email-template
COPY --from=builder /app/package.json ./

USER workeruser

# Start the worker using tsx directly
CMD ["npx", "tsx", "worker.ts"]
